import sqlite3

from aiogram import types
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import ParseMode

from data.config import ADMINS
from keyboards.inline.ADMIN_MENU_KB import ADMIN_MENU_KB
from loader import dp


class adminState(StatesGroup):
    userSearch = State()
    finish = State()


@dp.message_handler(state='*', commands=['admin'])
async def adminMenu(message: types.Message):
    if message.from_user.id in ADMINS:
        await message.answer("‚öôÔ∏è–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", reply_markup=ADMIN_MENU_KB)
    else:
        await message.answer(f"üõë–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª. –ï—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à ig "
                             f"<code>{message.from_user.id}</code> –¥—Ä—É–≥–æ–º—É –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è "
                             f"–¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ white-list.", parse_mode=ParseMode.HTML)


@dp.callback_query_handler(text='searchUser', state='*')
async def searchUser(call: types.CallbackQuery):
    await call.message.edit_text("–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram:")
    await adminState.userSearch.set()


@dp.message_handler(state=adminState.userSearch)
async def userSearchInput(message: types.Message):
    if message.text.isdigit():
        conn = sqlite3.connect("dataBase.db")
        cursor = conn.cursor()
        cursor.execute(f"SELECT * FROM bot_users WHERE tgId = {message.text}")
        response = cursor.fetchone()
        if response is None:
            await message.answer("‚ùå–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        else:
            await message.answer(f"<b>üë§–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å(<code>{response[0]}</code>)</b>\n"
                                 f"<b>üíµ–ë–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–µ:</b> {response[1]}", parse_mode=ParseMode.HTML)
            await adminState.finish.set()
    else:
        await message.answer("–í—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"
                             "–ü–æ–¥—Å–∫–∞–∑–∫–∞: —É–∑–Ω–∞—Ç—å –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /getid")


@dp.callback_query_handler(state='*', text='restart')
async def restartBotText(call: types.CallbackQuery):
    if call.from_user.id in ADMINS:
        import os
        import sys
        await call.message.answer("‚è≥–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω. . .")
        await call.answer()
        os.system("sh restart.sh")
        sys.exit()
